<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Articles on Tech Blog</title>
    <link>https://0shim4.github.io/tech.blog/post/</link>
    <description>Recent content in Articles on Tech Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-us</language>
    <lastBuildDate>Thu, 02 Mar 2017 00:00:00 +0000</lastBuildDate><atom:link href="https://0shim4.github.io/tech.blog/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Goのモジュール作成</title>
      <link>https://0shim4.github.io/tech.blog/post/005-go-create-module/</link>
      <pubDate>Fri, 24 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://0shim4.github.io/tech.blog/post/005-go-create-module/</guid>
      <description>はじめに モジュールの作成方法と作成したモジュールの実行方法を紹介します。 本記事ではプログラムを開始するhelloモジュールと、mainモジュール内で実行するgreetingsモジュールを作成します。 greetings モジュールの作成 greetings モジュールを配置するディレクトリを作成 mkdir greetings cd greetings greetings モジュールの初</description>
    </item>
    
    <item>
      <title>読んでもらえる記事の書き方メモ</title>
      <link>https://0shim4.github.io/tech.blog/post/006-how-to-creat-good-article/</link>
      <pubDate>Fri, 24 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://0shim4.github.io/tech.blog/post/006-how-to-creat-good-article/</guid>
      <description>例 ## キーワード * 技術ブログ, 書き方 ## ターゲット * 技術ブログを始めようとしている人 * ブログを書いているけど、いい文章が書けない人 ## 読者の悩み * 技術ブログを書きたいけど、うまく書けない。読んでもらえる書き方を知りたい。 ## 悩みが解決する条件 * 技術ブログの書き方がわかること ## 悩みの解決策</description>
    </item>
    
    <item>
      <title>マップの操作</title>
      <link>https://0shim4.github.io/tech.blog/post/003-map/</link>
      <pubDate>Wed, 22 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://0shim4.github.io/tech.blog/post/003-map/</guid>
      <description>マップとは スライスと同じく頻繁に利用されるコンポジット型の1つ。キーはユニークで値と紐づけられ、キーの順序は意図的にランダムにされる。追加や削除の順も関係ないため繰り返し処理の順序は保証されない。 また、スライスと比べて要素が多くなるとマップの方が検索が早くなるが、メモリの消費も増</description>
    </item>
    
    <item>
      <title>スライスの操作</title>
      <link>https://0shim4.github.io/tech.blog/post/002-slice/</link>
      <pubDate>Mon, 20 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://0shim4.github.io/tech.blog/post/002-slice/</guid>
      <description>スライスとは スライスは要素数の指定なく同じ型のデータを並べて初期化するデータ構造。 要素数を指定しないため配列よりもデータの扱いが柔軟。 lenとcapでスライスの長さと容量を取得する スライスは配列と同様に同じ型のデータを集めて並べたデータ構造を持つ型で、複数要素のリストを便利に扱え</description>
    </item>
    
    <item>
      <title>Go の型</title>
      <link>https://0shim4.github.io/tech.blog/post/001-go-type/</link>
      <pubDate>Sun, 19 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://0shim4.github.io/tech.blog/post/001-go-type/</guid>
      <description>goは静的型付け言語なのでコンパイル時に型の整合性が検証される。暗黙の型変換も行われないため意図しない型変換でのトラブルも遭遇しにくい。また、値から型が明白なら型の記述を省ける。 組み込み型の一覧 A Tour of Go Basic types 種類 型名 論理型 bool 文字列型 string 符号付き整数型 int, int8, int16, int32, int64, rune 符号なし整数型 uint, uint8, uint16, uint32,</description>
    </item>
    
  </channel>
</rss>
